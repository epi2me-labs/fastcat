include:
    - project: "epi2melabs/ci-templates"
      file: "push-github.yaml"
    - project: "epi2melabs/ci-templates"
      file: "push-conda.yaml"

image: ${UBUNTUIMAGE}:20.04

.prep-image: &prep-image |
    apt update; DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends gcc zlib1g-dev valgrind

stages:
    - test
    - prerelease
    - release

# Insist that the version in src/args.c matches the git tag
.check-versions: &check-versions |
    CVER="v"$(grep argp_program_version src/args.c | awk '{gsub("\"","",$5); gsub(";","",$5); print $5}')
    TAGVER=${CI_COMMIT_TAG}
    if [[ "${CVER}" != "${TAGVER}" ]]; then
        echo "Mismatching TAG and PACKAGE versions:"
        echo " -     TAG:'$TAGVER'"
        echo " - PACKAGE:'$CVER'"
        exit 1
    else
        echo "TAG and PACKAGE versions agree: '${CVER}'"
    fi

# Insist a CHANGELOG entry has been made for tags
.check-changelog: &check-changelog |
    TAGVER=${CI_COMMIT_TAG}
    MATCHES=$(grep -c "## \[${TAGVER}\]" CHANGELOG.md || exit 0)
    if [[ "${MATCHES}" != "1" ]]; then
        echo "Expected one match to '${CI_COMMIT_TAG}' in CHANGELOG, found ${MATCHES}"
        exit 1
    else
        echo "Found CHANGELOG.md entry for tag"
    fi

build:
    stage: test
    before_script:
        - *prep-image
    script:
        - make fastcat
        - ./fastcat --help
        - make mem_check

deploy-checks:
    stage: prerelease
    script:
        - *check-versions
        - *check-changelog
    rules:
        - if: '$CI_COMMIT_TAG =~ /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/'


conda:
    extends: .deploy-conda
    before_script:
        - *prep-image
        - export CONDA_PKG=${CI_PROJECT_NAME}
        - export CONDA_PKG_VERSION=${CI_COMMIT_TAG/v/}
        - cd conda

conda-mac:
    extends: .deploy-conda-mac
    before_script:
        - export CONDA_PKG=${CI_PROJECT_NAME}
        - export CONDA_PKG_VERSION=${CI_COMMIT_TAG/v/}
        - cd conda
